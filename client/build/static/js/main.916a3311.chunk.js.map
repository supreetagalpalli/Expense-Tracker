{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/expenseReducer.js","reducers/index.js","store.js","actions/expenseAction.js","components/layout/Navbar.js","components/layout/Landing.js","components/expenses/Expenses.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/auth/Register.js","components/auth/Login.js","components/expenses/AddExpense.js","components/expenses/EditExpense.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","expenses","selectedExpense","loading","combineReducers","auth","state","arguments","action","objectSpread","errors","filter","expense","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","clearCurrentExpenses","setExpenseLoading","Navbar","e","preventDefault","this","props","location","href","authLinks","react_default","a","createElement","className","onClick","onLogoutClick","bind","guestLinks","react_router_dom","to","data-toggle","data-target","id","Component","connect","Landing","history","push","Expenses","totalExpense","getCurrentExpenses","deleteExpense","_this2","console","log","total","reduce","price","map","key","title","category","moment","utc","date","format","concat","onDeleteClick","get","then","res","data","catch","err","delete","response","Sidebar","Dashboard","expenses_Expenses","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","name","email","password","password2","onChange","assertThisInitialized","onSubmit","nextProps","setState","defineProperty","target","newUser","registerUser","noValidate","classnames","is-invalid","placeholder","userData","post","withRouter","Login","loginUser","setItem","jwt_decode","AddExpense","newExpense","addExpense","htmlFor","minLength","required","disabled","hidden","expData","EditExpense","editExpense","match","params","onChangeDate","defaultValue","expNewData","put","jwtToken","currentTime","Date","now","exp","App","es","layout_Navbar","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.916a3311.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_EXPENSES = 'GET_EXPENSES';\nexport const EXPENSE_LOADING = 'EXPENSE_LOADING';\nexport const EDIT_EXPENSES = 'EDIT_EXPENSES';\nexport const DELETE_EXPENSES = 'DELETE_EXPENSES';\nexport const CLEAR_CURRENT_EXPENSES = 'CLEAR_CURRENT_EXPENSES';\n\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n\nexport default isEmpty;\n","import isEmpty from \"../validation/is-empty\";\nimport { SET_CURRENT_USER } from \"../actions/types\";\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  GET_EXPENSES,\n  EXPENSE_LOADING,\n  EDIT_EXPENSES,\n  DELETE_EXPENSES,\n  CLEAR_CURRENT_EXPENSES\n} from \"../actions/types\";\nconst initialState = {\n  expenses: null,\n  selectedExpense: null,\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case EXPENSE_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_EXPENSES:\n      return {\n        ...state,\n        expenses: action.payload,\n        loading: false\n      };\n    case EDIT_EXPENSES:\n      return state;\n\n    case DELETE_EXPENSES:\n      return {\n        ...state,\n        expenses: state.expenses.filter(\n          expense => expense._id !== action.payload\n        ),\n        loading: false\n      };\n    case CLEAR_CURRENT_EXPENSES:\n      return {\n        expenses: null\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport expenseReducer from \"./expenseReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  expenses: expenseReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import axios from \"axios\";\n\nimport {\n  GET_EXPENSES,\n  EXPENSE_LOADING,\n  GET_ERRORS,\n  DELETE_EXPENSES,\n  CLEAR_CURRENT_EXPENSES\n} from \"./types\";\n\nexport const getCurrentExpenses = () => dispatch => {\n  dispatch(setExpenseLoading());\n  axios\n    .get(\"/api/expenses/expense\")\n    .then(res =>\n      dispatch({\n        type: GET_EXPENSES,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_EXPENSES,\n        payload: {}\n      })\n    );\n};\n\nexport const addExpense = (expData, history) => dispatch => {\n  axios\n    .post(\"/api/expenses/expense/add\", expData)\n    .then(res => history.push(\"/expense\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const editExpense = (expNewData, history, id) => dispatch => {\n  axios\n    .put(`/api/expenses/expense/${id}`, expNewData)\n    .then(res => history.push(\"/expense\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const deleteExpense = id => dispatch => {\n  axios\n    .delete(`/api/expenses/expense/${id}`)\n    .then(res => {\n      dispatch({\n        type: DELETE_EXPENSES,\n        payload: id\n      });\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_EXPENSES,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const clearCurrentExpenses = () => {\n  return {\n    type: CLEAR_CURRENT_EXPENSES\n  };\n};\n\nexport const setExpenseLoading = () => {\n  return {\n    type: EXPENSE_LOADING\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { clearCurrentExpenses } from \"../../actions/expenseAction\";\nclass Navbar extends Component {\n  onLogoutClick(e) {\n    e.preventDefault();\n\n    this.props.clearCurrentExpenses();\n    this.props.logoutUser();\n    window.location.href = \"/login\";\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a\n            href=\"#\"\n            onClick={this.onLogoutClick.bind(this)}\n            className=\"nav-link\"\n          >\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">\n            Sign Up\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : guestLinks}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, clearCurrentExpenses }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/expense\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"dark-overlay landing-inner text-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\"> Expense Manager</h1>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  {}\n)(Landing);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  getCurrentExpenses,\n  deleteExpense,\n  clearCurrentExpenses\n} from \"../../actions/expenseAction\";\nimport moment from \"moment\";\n\nclass Expenses extends Component {\n  state = {\n    totalExpense: null\n  };\n\n  componentDidMount() {\n    this.props.getCurrentExpenses();\n  }\n\n  onDeleteClick(id) {\n    this.props.deleteExpense(id);\n  }\n\n  render() {\n    const { expenses } = this.props.expenses;\n    const { user } = this.props.auth;\n    console.log(user);\n    const { isAuthenticated } = this.props.auth;\n    if (isAuthenticated) {\n      if (expenses) {\n        const total = expenses.reduce((total, expense) => {\n          return total + expense.price;\n        }, 0);\n        console.log(total);\n        return (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-sm-8\">\n                <h2>Expenses</h2>\n              </div>\n\n              <div className=\"col-sm-4\">\n                <h2>Total:${total / 100}</h2>\n              </div>\n            </div>\n            <table className=\"table table-striped\">\n              <thead className=\"thead-inverse\">\n                <tr>\n                  <th>Title</th>\n                  <th>Price</th>\n                  <th>Category</th>\n                  <th>Date</th>\n                  <th />\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {expenses.map(expense => (\n                  <tr key={expense._id}>\n                    <td>{expense.title}</td>\n                    <td>${expense.price / 100}</td>\n                    <td>{expense.category}</td>\n                    <td>{moment.utc(expense.date).format(\"YYYY-MM-DD\")}</td>\n                    <td>\n                      <Link to={`/expense/${expense._id}`} className=\"btn\">\n                        <i className=\"far fa-edit\" />\n                      </Link>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn\"\n                        onClick={() => this.onDeleteClick(expense._id)}\n                      >\n                        <i className=\"far fa-trash-alt\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        );\n      } else {\n        return <h1>Loading..</h1>;\n      }\n    } else {\n      return (window.location.href = \"/\");\n    }\n  }\n}\nExpenses.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentExpenses: PropTypes.func.isRequired,\n  expenses: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  expenses: state.expenses\n});\nexport default connect(\n  mapStateToProps,\n  { getCurrentExpenses, deleteExpense, clearCurrentExpenses, logoutUser }\n)(Expenses);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default () => {\n  return (\n    <Link to=\"/add\" className=\"btn btn-success btn-black\">\n      <i className=\"fas fa-plus\" /> New\n    </Link>\n  );\n};\n","import React from \"react\";\nimport Expenses from \"../expenses/Expenses\";\nimport Sidebar from \"../layout/Sidebar\";\n\nexport default () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2\">\n        <br />\n      </div>\n      <div className=\"col-md-8\">\n        <Expenses />\n      </div>\n      <div className=\"col-md-2\">\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/expense\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your account</p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.name\n                    })}\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.email\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">{errors.email}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password2\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={this.state.password2}\n                    onChange={this.onChange}\n                  />\n                  {errors.password2 && (\n                    <div className=\"invalid-feedback\">{errors.password2}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/expense\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/expense\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData);\n  }\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">Sign in to your account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.email\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">{errors.email}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExpense } from \"../../actions/expenseAction\";\n\nclass AddExpense extends Component {\n  state = {\n    title: \"\",\n    price: \"\",\n    category: \"\",\n    date: \"\"\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newExpense = {\n      title: this.state.title,\n      price: this.state.price * 100,\n      category: this.state.category,\n      date: this.state.date\n    };\n    this.props.addExpense(newExpense, this.props.history);\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    if (isAuthenticated) {\n      return (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Link to=\"/expense\" className=\"btn btn-link\">\n                <i className=\"fas fa-arrow-circle-left\" /> Back to Expenses\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"card-header\">Add Expense</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"title\"\n                    minLength=\"2\"\n                    required\n                    onChange={this.onChange}\n                    value={this.state.title}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"price\">Price</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    name=\"price\"\n                    minLength=\"2\"\n                    required\n                    onChange={this.onChange}\n                    value={this.state.price}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"category\">Category</label>\n                  <select\n                    value={this.state.category}\n                    onChange={this.onChange}\n                    name=\"category\"\n                    required\n                    className=\"form-control\"\n                  >\n                    <option disabled value=\"\" hidden>\n                      Select a Category\n                    </option>\n                    <option value=\"groceries\">Groceries</option>\n                    <option value=\"utilities\">Utilities</option>\n                    <option value=\"travel\">Travel</option>\n                    <option value=\"beauty\">Beauty</option>\n                    <option value=\"restaurant\">Restaurant</option>\n                    <option value=\"shopping\">Shopping</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"date\">Date</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"date\"\n                    required\n                    onChange={this.onChange}\n                    value={this.state.date}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"btn btn-primary btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (window.location.href = \"/\");\n    }\n  }\n}\nAddExpense.propTypes = {\n  expenses: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  expenses: state.expenses,\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { addExpense }\n)(AddExpense);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editExpense } from \"../../actions/expenseAction\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass EditExpense extends Component {\n  state = {\n    title: this.props.expense.title,\n    price: this.props.expense.price / 100,\n    category: this.props.expense.category,\n    date: moment.utc(this.props.expense.date).format(\"YYYY-MM-DD\")\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const newExpense = {\n      title: this.state.title,\n      price: this.state.price * 100,\n      category: this.state.category,\n      date: this.state.date\n    };\n\n    this.props.editExpense(\n      newExpense,\n      this.props.history,\n      this.props.match.params.id\n    );\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onChangeDate = e => {\n    this.setState({\n      [e.target.name]: moment(e.target.value).format(\"YYYY-MM-DD\")\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Link to=\"/expense\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\" /> Back to Expenses\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"card-header\">Edit Expense</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"title\"\n                  minLength=\"2\"\n                  defaultValue={this.state.title}\n                  value={this.props.title}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"price\">Price</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"price\"\n                  minLength=\"2\"\n                  defaultValue={this.state.price}\n                  onChange={this.onChange}\n                  value={this.props.price}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <select\n                  defaultValue={this.state.category}\n                  onChange={this.onChange}\n                  value={this.props.category}\n                  placeholder=\"Select a category\"\n                  name=\"category\"\n                  required\n                  className=\"form-control\"\n                >\n                  <option value=\"groceries\">Groceries</option>\n                  <option value=\"utilities\">Utilities</option>\n                  <option value=\"travel\">Travel</option>\n                  <option value=\"beauty\">Beauty</option>\n                  <option value=\"restaurant\">Restaurant</option>\n                  <option value=\"shopping\">Shopping</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"date\">Date</label>\n\n                <input\n                  className=\"form-control\"\n                  name=\"date\"\n                  type=\"date\"\n                  defaultValue={moment(this.state.date).format(\"YYYY-MM-DD\")}\n                  onChange={this.onChangeDate}\n                  value={this.props.date}\n                />\n              </div>\n              <input\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-primary btn-block\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, props) => {\n  return {\n    expense: state.expenses.expenses.filter(\n      expense => expense._id === props.match.params.id\n    )[0]\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { editExpense }\n)(withRouter(EditExpense));\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport AddExpense from \"./components/expenses/AddExpense\";\nimport EditExpense from \"./components/expenses/EditExpense\";\nimport \"./App.css\";\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container\">\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/expense\" component={Dashboard} />\n              <Route exact path=\"/add\" component={AddExpense} />\n              <Route exact path=\"/expense/:id\" component={EditExpense} />\n            </div>\n            {/* <Footer /> */}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}